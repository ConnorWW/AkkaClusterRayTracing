akka {
  actor {
    provider = cluster

    serialization-bindings {
      "sample.cluster.CborSerializable" = jackson-cbor
      "acrt.cluster.untyped.Frontend$Start$" = kryo
      "acrt.cluster.untyped.GeometryManager$CastRay" = kryo
      "acrt.cluster.untyped.GeometryManager$FindPath" = kryo 
      "acrt.cluster.untyped.GeometryManager$BackendRegistration$" = kryo
      "acrt.cluster.untyped.GeometryCreator" = kryo
      "acrt.cluster.untyped.GeometryOrganizerAll$ReceiveDone" = kryo
      "acrt.cluster.untyped.GeometryOrganizerAll$CastRay" = kryo
      "acrt.cluster.untyped.GeometryOrganizerAll$RecID" = kryo
      "acrt.cluster.untyped.GeometryOrganizerAll$ManagerRegistration" = kryo
      "acrt.cluster.untyped.ImageDrawer$Start" = kryo
      "acrt.cluster.untyped.ImageDrawer$SetColor" = kryo
      "acrt.cluster.untyped.Intersector$CastRay" = kryo
      "acrt.cluster.untyped.PixelHandler$AddRay" = kryo
      "acrt.cluster.untyped.PixelHandler$SetColor" = kryo
      "acrt.cluster.untyped.PixelHandler$IntersectResult" = kryo
    }
  }
  remote {
    artery {
      canonical.hostname = "131.194.71.133"
      canonical.port = 25251
    }
  }
  cluster {
    seed-nodes = [
      "akka://ClusterSystem@131.194.71.132:25251",
      "akka://ClusterSystem@131.194.71.133:25251"]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}

